//
//  RandomImageViewController.swift
//  LoremPicsumApp
//
//  Created by Aleksandr Kretov on 14.11.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RandomImageDisplayLogic: AnyObject {
    func display(viewModel: RandomImage.ViewModel)
}

class RandomImageViewController: UIViewController, RandomImageDisplayLogic {

    var interactor: RandomImageBusinessLogic?
    var router: (NSObjectProtocol & RandomImageRoutingLogic & RandomImageDataPassing)?
    
    let fetcher: NetworkFetcher

    // MARK: Object lifecycle
    
    init(fetcher: NetworkFetcher) {
        self.fetcher = fetcher
        super.init(nibName: nil, bundle: nil)
        setup()
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
//    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
//        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
//        setup()
//    }
//
//    required init?(coder aDecoder: NSCoder) {
//        super.init(coder: aDecoder)
//        setup()
//    }

    // MARK: - Setup Clean Code Design Pattern 

    private func setup() {
        let viewController = self
        let interactor = RandomImageInteractor(fetcher: fetcher)
        let presenter = RandomImagePresenter()
        let router = RandomImageRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .green
    }

    // MARK: - display view model from RandomImagePresenter

    func display(viewModel: RandomImage.ViewModel) {
        
    }
//
//    func displaySomethingElse(viewModel: RandomImage.SomethingElse.ViewModel) {
//        // do sometingElse with viewModel
//    }
}
